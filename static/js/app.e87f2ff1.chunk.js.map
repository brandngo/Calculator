{"version":3,"sources":["App.js"],"names":["App","useWindowDimensions","height","width","useState","prevRes","setPrevRes","calcStr","setCalcStr","resStr","setResStr","createBtn","title","padding","color","disabled","length","onPress","evalRes","eval","slice","longPressDelete","style","styles","touchpadBtn","backgroundColor","onLongPress","touchpadText","paddingTop","paddingLeft","paddingRight","paddingBottom","determineDimension","justifyContent","alignItems","marginTop","marginLeft","marginRight","resultCont","persistentScrollbar","fontSize","display","flexDirection","touchpadCont","touchpadRow","StyleSheet","create","container","flex","alignContent","marginBottom","elevation","borderColor","borderWidth","borderRadius","paddingVertical","paddingHorizontal"],"mappings":"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","file":"static/js/app.e87f2ff1.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Pressable } from 'react-native';\nimport { useWindowDimensions } from 'react-native-web';\n\nexport default function App() {\n  const { height, width } = useWindowDimensions();\n  const [prevRes, setPrevRes] = useState(\"\");\n  const [calcStr, setCalcStr] = useState(\"\");\n  const [resStr, setResStr] = useState(\"\");\n\n  const createBtn = (title, padding=[20,20,20,20], color= \"#A1E0FF\", disabled=false) => {\n    if (padding.length < 4) {\n      padding = [20,20,20,20]\n    }\n    const onPress = () => {\n      if (title == \"=\") {\n        const evalRes = eval(calcStr)\n        setPrevRes(evalRes)\n        setResStr(evalRes)\n        return\n      } else if (title == \"←\") {\n        setPrevRes(resStr)\n        setResStr(\"\")\n        setCalcStr(calcStr.slice(0,-1))\n        return\n      } else if (title == \"×\") {\n        setCalcStr(calcStr + \"*\")\n      } else if (title == \"÷\") {\n        setCalcStr(calcStr + \"/\")\n      } else if (title == \"ANS\") {\n        setCalcStr(calcStr + prevRes)\n      } else {\n        setCalcStr(calcStr + title);\n      }\n    }\n    const longPressDelete = () => {\n      if (title == \"←\") {\n        setPrevRes(resStr)\n        setResStr(\"\")\n        setCalcStr(\"\")\n      }\n    }\n  \n    return (\n      <View>\n        <Pressable style={{...styles.touchpadBtn, backgroundColor: color}} onPress={onPress} onLongPress={title == \"←\" ? longPressDelete : () => {}} disabled={disabled}>\n          <Text \n            style={{...styles.touchpadText, paddingTop: padding[0], paddingLeft: padding[1], paddingRight: padding[3], paddingBottom: padding[2]}}\n          >{title}</Text>\n        </Pressable>\n      </View>\n    )\n  }\n\n  const determineDimension = () => {\n    if (width >= 400) {\n      return {\n        width: \"30%\",\n        height: \"100%\"\n      }\n    } else {\n      return {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }\n\n  }\n\n  return (\n    <View style={{ justifyContent: \"center\", alignItems: \"center\", backgroundColor: \"#CCD4D9\", width: \"100%\", height: \"100%\" }}>\n      <View style={{ ...determineDimension() }}>\n        <StatusBar style=\"auto\" />\n        <View style={{ marginTop: \"10%\", height: 100, marginLeft: \"4%\", marginRight: \"4%\" }}>\n          <ScrollView styles={styles.resultCont} persistentScrollbar={true}>\n            <Text style={{color: \"#000000\", fontSize: 20}}>{calcStr}</Text>\n          </ScrollView>\n          \n          <View style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"baseline\" }}>\n            <Text style={{fontSize: 30, color: \"#1D5875\"}}>= </Text>\n            <ScrollView styles={styles.resultCont}>\n              <Text style={{color: \"#000000\", fontSize: 25}}>{resStr}</Text>\n            </ScrollView>\n          </View>\n          \n        </View>\n        <View style={styles.touchpadCont}>\n          <View style={styles.touchpadRow}>\n            {createBtn(\"(\", [20,22,20,22], \"#3295C7\")}\n            {createBtn(\")\", [20,22,20,22], \"#3295C7\")}\n            {createBtn(\"xⁿ\", [20,17,20,17], \"#565A5C\", true)}\n            {createBtn(\"ANS\", [20,6,20,6], \"#3295C7\")}\n          </View>\n          <View style={styles.touchpadRow}>\n            {createBtn(\"7\")}\n            {createBtn(\"8\")}\n            {createBtn(\"9\")}\n            {createBtn(\"÷\", [], \"#3DB8F5\")}\n          </View>\n\n          <View style={styles.touchpadRow}>\n            {createBtn(\"4\")}\n            {createBtn(\"5\")}\n            {createBtn(\"6\")}\n            {createBtn(\"×\", [], \"#3DB8F5\")}\n          </View>\n\n          <View style={styles.touchpadRow}>\n            {createBtn(\"1\")}\n            {createBtn(\"2\")}\n            {createBtn(\"3\")}\n            {createBtn(\"+\", [], \"#3DB8F5\")}\n            \n          </View>\n\n          <View style={styles.touchpadRow}>\n            {createBtn(\"0\")}\n            {createBtn(\"←\", [20,18,20,18], \"#3295C7\") /* hold to clear, press to bckspace */}\n            {createBtn(\"=\", [], \"#3295C7\")}\n            {createBtn(\"-\", [20,22,20,22], \"#3DB8F5\")}\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  resultCont: {\n    height: \"100%\",\n  },\n  touchpadCont: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  touchpadRow: {\n    display: \"flex\",\n    height: \"15%\",\n    marginBottom: 20,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n  },\n  touchpadBtn: {\n    elevation: 8,\n    borderColor: \"#000000\",\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n  },\n  touchpadText: {\n    fontSize: 20,\n    color: \"#000000\",\n  }\n});\n"],"sourceRoot":""}